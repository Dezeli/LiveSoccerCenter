가제: Live Soccer Center

------------------------------
개발 메모
- 회원가입시 비밀번호가 서로 일치하지 않는다면 >> Ajax / jQuery
- 회원가입시 이미 있는 아이디로 회원가입하려한다면 
- 로그인을 완료했을 때 이름을 바꾸는 방법
- SQL과 ORM의 차이(ORM은 객체 지향?)
- include와 extends는 Django Html에서만 사용가능한 기능? 다른 웹 프레임워크는 비슷한 기능을 지원?
- html templating? js를 이용한 테그 분리? jinja2?
------------------------------



웹앱의 주요 핵심 기능
1. 자유게시판 (자유롭게 토론)
2. 기사(article) (사용자는 댓글 작성 가능)
----------------------------------------------------
기능
- 회원가입
- 로그인
- 게시글 작성
- 게시글 삭제 (+삭제 문구도 포함 alert)
- 게시글 수정
- 게시글 화면에 보여지기 (어디에 페이지에)
- 파일 첨부
- 댓글 작성
- 댓글 삭제
- 좋아요 기능 (후순위)
- 페이징(부가기능)




=============================

일단 기본적인 django 프로젝트 생성 & migrate까지 완료

☆ App
To_do_list 에서는 앱을 하나만 만들어 이용하였다.
이번에 App을 나누게 된다면 당장은 두개정도가 될 듯하다.
- 회원 가입 및 로그인
- 게시판

☆ Model
4개 모델(테이블)이 필요할 것 같다.
USER / POST / COMMENT / FILES
1. USER
(id)/name/pw/admit
2. POST
(id)/title/content/writer/time/del
3. COMMENT
(id)/Post.id(foriegn key)/content/writer/time/del
4. Files
(id)/Post.id(foriegn key)/file/

☆ URL
메인 페이지 : http://127.0.0.1:8000/
자유 게시판 : http://127.0.0.1:8000/free/(page)/
	- 게시글 http://127.0.0.1:8000/free/post/(num)/
기사 게시판 : http://127.0.0.1:8000/article/(page)/
	- 게시글 http://127.0.0.1:8000/article/post/(num)/
정보 토론장 : http://127.0.0.1:8000/info/
	- 선수 정보 http://127.0.0.1:8000/info/player/
	- 감독 정보 http://127.0.0.1:8000/info/coach/
	- 구단 정보 http://127.0.0.1:8000/info/team/
	- 성적 정보 http://127.0.0.1:8000/info/grade/
회원가입 : http://127.0.0.1:8000/register/
로그인 : http://127.0.0.1:8000/login/


☆ 질문
회원들에게 이메일로 정보를 전달하는 경우에
어떠한 방법으로 보통 전달이 되나요?

----------------------------------------------------
c.f)
네이버에는 어떤 선수가 어떤 부상이고...
선수들 인스타그램 크롤링!!!
선수들 근황

get bootstrap




